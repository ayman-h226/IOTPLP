# ========================================== #
#      APPLICATION CONFIGURATION             #
# ========================================== #
spring.application.name=iot-platform-backend

# ========================================== #
#      SERVER CONFIGURATION                  #
# ========================================== #
server.port=8080

# ========================================== #
#      DATABASE (POSTGRESQL) CONFIGURATION   #
# ========================================== #
# -- Connection Settings --
# Assurez-vous que ces valeurs correspondent EXACTEMENT à celles dans docker-compose.yml (environment section de postgres_db)
spring.datasource.url=jdbc:postgresql://localhost:5432/iotplatform_db_direct
spring.datasource.username=iotuser_dev_direct
spring.datasource.password=strongpassword123_direct
spring.datasource.driverClassName=org.postgresql.Driver

# -- JPA & Hibernate Settings --
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# ddl-auto: 'update' est ok pour le dev. Pour prod, utiliser 'validate' ou 'none' avec Flyway/Liquibase.
# 'create' supprime et recrée à chaque démarrage (perd les données).
spring.jpa.hibernate.ddl-auto=update

# Afficher les requêtes SQL (utile en dev)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true # Pour un affichage plus lisible des logs SQL

# Optionnel: Nommage des tables et colonnes
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ========================================== #
#      MQTT CLIENT CONFIGURATION (pour le backend) #
# ========================================== #
# (Ces propriétés seront utilisées par votre MqttClient bean ou votre config Spring Integration MQTT)
mqtt.broker.url=tcp://mosquitto:1883 
mqtt.client.id=iot-platform-backend-client 
mqtt.topic.sensor-data-pattern=hubs/+/sensors/+/data 
mqtt.topic.sensor-data=sensors/+/data
# Plus tard, pour la sécurité du client MQTT du backend vers le broker (si vous sécurisez Mosquitto)
# mqtt.username=backend_user
# mqtt.password=backend_pass

# ========================================== #
#      LOGGING CONFIGURATION                 #
# ========================================== #
logging.level.root=INFO
logging.level.com.votredomaine.iotplatform=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# ========================================== #
#      ACTUATOR CONFIGURATION (Optionnel)    #
# ========================================== #
# management.endpoints.web.exposure.include=health,info,metrics,loggers
# management.endpoint.health.show-details=when_authorized

# ========================================== #
#      SWAGGER/OPENAPI CONFIGURATION (Optionnel) #
# ========================================== #
# springdoc.api-docs.path=/api-docs
# springdoc.swagger-ui.path=/swagger-ui.html

# ========================================== #
#      AUTRES CONFIGURATIONS SPECIFIQUES     #
# ========================================== #
# (Ajoutez ici d'autres propriétés spécifiques à votre application au fur et à mesure)