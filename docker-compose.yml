version: '3.8'

services:
  # Service PostgreSQL
  postgres_db:
    image: postgres:16-alpine
    container_name: iot_postgres_db
    environment:
      POSTGRES_USER: iotuser_dev_direct
      POSTGRES_PASSWORD: strongpassword123_direct
      POSTGRES_DB: iotplatform_db_direct
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_direct:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iotuser_dev_direct -d iotplatform_db_direct"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iot_network

  # Service Mosquitto
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: iot_mosquitto_broker
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config:ro
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    command: mosquitto -c /mosquitto/config/mosquitto.conf
    restart: unless-stopped
    networks:
      - iot_network
      
  # Service Application
  app:
    build:
      #context: .
      context: ../../../../../../   # This points to your project root

      dockerfile: Dockerfile
    container_name: iot_platform_app
    depends_on:
      postgres_db:
        condition: service_healthy
      mosquitto:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_db:5432/iotplatform_db_direct
      - SPRING_DATASOURCE_USERNAME=iotuser_dev_direct
      - SPRING_DATASOURCE_PASSWORD=strongpassword123_direct
      - MQTT_BROKER_URL=tcp://mosquitto:1883
    networks:
      - iot_network

networks:
  iot_network:
    driver: bridge

volumes:
  postgres_data_direct: # Volume nomm√© pour PostgreSQL
  # mosquitto_config:
  # mosquitto_data:
  # mosquitto_log: